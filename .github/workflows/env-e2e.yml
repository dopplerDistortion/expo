# This is a temporary workflow to assert the test plan of PR #25393
# https://github.com/expo/expo/pull/25393

name: Testplan PR 25393

on:
  workflow_dispatch:
  pull_request:
    paths:
      - packages/@expo/env/src/**

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: 👀 Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: 🏗️ Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: 🏗️ Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: ♻️ Restore caches
        uses: ./.github/actions/expo-caches
        id: expo-caches
        with:
          yarn-workspace: 'true'

      - name: 🧶 Install node modules in root dir
        if: steps.expo-caches.outputs.yarn-workspace-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Create Metro config and .env files
        working-directory: apps/bare-expo
        run: |
          echo "const { getDefaultConfig } = require('expo/metro-config'); console.log('ENVVARS'); console.log('TEST_OVERWRITE', process.env.TEST_OVERWRITE); console.log('TEST_.env.local', process.env['TEST_.env.local']); console.log('TEST_.env.development', process.env['TEST_.env.development']); console.log('TEST_.env', process.env['TEST_.env']); process.exit(0); module.exports = getDefaultConfig(__dirname);" > metro.config.js
          echo "TEST_OVERWRITE=.env
          TEST_.env=loaded" > .env
          echo "TEST_OVERWRITE=.env.development
          TEST_.env.development=loaded" > .env.development
          echo "TEST_OVERWRITE=.env.local
          TEST_.env.local=loaded" > .env.local

      - name: Generate outputs
        working-directory: apps/bare-expo
        run: |
          bun expo start > output-bun.txt
          echo "bun: $(cat output-bun.txt)"
          npx expo start > output-npx.txt
          echo "npx: $(cat output-npx.txt)"
          yarn expo start > output-yarn.txt
          echo "yarn: $(cat output-yarn.txt)"

      - name: Validate outputs
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            const DIR = 'apps/bare-expo';

            const bun = getRelevantLines('output-bun.txt');
            const npx = getRelevantLines('output-npx.txt');
            const yarn = getRelevantLines('output-yarn.txt');

            if (npx !== yarn) {
              console.log({ npx, yarn });
              throw new Error('npx and yarn outputs dont match');
            } else {
              console.log('✅ npx and yarn outputs match');
            }

            if (npx !== bun) {
              console.log({ npx, bun });
              throw new Error('npx and bun outputs dont match');
            } else {
              console.log('✅ npx and bun outputs match');
            }

            function getRelevantLines(fileName) {
              const content = fs.readFileSync(path.join(DIR, fileName), 'utf8');
              return content
                .split('\n')
                .filter((line) => line.startsWith('ENVVARS') || line.startsWith('TEST_'))
                .join('\n');
            }

            console.log('✅ All outputs match');
